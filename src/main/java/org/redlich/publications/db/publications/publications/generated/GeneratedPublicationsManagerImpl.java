package org.redlich.publications.db.publications.publications.generated;

import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import org.redlich.publications.db.publications.publications.Publications;

/**
 * The generated base implementation for the manager of every {@link
 * org.redlich.publications.db.publications.publications.Publications} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPublicationsManagerImpl extends AbstractManager<Publications> implements GeneratedPublicationsManager {
    
    private final TableIdentifier<Publications> tableIdentifier;
    
    protected GeneratedPublicationsManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("db", "publications", "publications");
    }
    
    @Override
    public TableIdentifier<Publications> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Publications>> fields() {
        return Stream.of(
            Publications.ID,
            Publications.VERSION,
            Publications.TYPE_ID,
            Publications.TITLE,
            Publications.AUTHOR_ID,
            Publications.PUBLISHER_ID,
            Publications.DUE_DATE,
            Publications.SUBMIT_DATE,
            Publications.PUBLISH_DATE,
            Publications.URL
        );
    }
    
    @Override
    public Stream<Field<Publications>> primaryKeyFields() {
        return Stream.of(
            Publications.ID
        );
    }
}