package org.redlich.publications.db.publications.publishers.generated;

import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import org.redlich.publications.db.publications.publishers.Publishers;

/**
 * The generated base implementation for the manager of every {@link
 * org.redlich.publications.db.publications.publishers.Publishers} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPublishersManagerImpl extends AbstractManager<Publishers> implements GeneratedPublishersManager {
    
    private final TableIdentifier<Publishers> tableIdentifier;
    
    protected GeneratedPublishersManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("db", "publications", "publishers");
    }
    
    @Override
    public TableIdentifier<Publishers> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Publishers>> fields() {
        return Stream.of(
            Publishers.ID,
            Publishers.VERSION,
            Publishers.PUBLISHER,
            Publishers.LAST_NAME,
            Publishers.FIRST_NAME,
            Publishers.EMAIL,
            Publishers.PHONE
        );
    }
    
    @Override
    public Stream<Field<Publishers>> primaryKeyFields() {
        return Stream.of(
            Publishers.ID
        );
    }
}