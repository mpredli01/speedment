package org.redlich.publications.db.publications.states.generated;

import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import org.redlich.publications.db.publications.states.States;

/**
 * The generated base implementation for the manager of every {@link
 * org.redlich.publications.db.publications.states.States} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedStatesManagerImpl extends AbstractManager<States> implements GeneratedStatesManager {
    
    private final TableIdentifier<States> tableIdentifier;
    
    protected GeneratedStatesManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("db", "publications", "states");
    }
    
    @Override
    public TableIdentifier<States> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<States>> fields() {
        return Stream.of(
            States.ID,
            States.VERSION,
            States.STATE,
            States.MNEMONIC
        );
    }
    
    @Override
    public Stream<Field<States>> primaryKeyFields() {
        return Stream.of(
            States.ID
        );
    }
}