package org.redlich.publications.db.publications.types.generated;

import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import org.redlich.publications.db.publications.types.Types;

/**
 * The generated base implementation for the manager of every {@link
 * org.redlich.publications.db.publications.types.Types} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedTypesManagerImpl extends AbstractManager<Types> implements GeneratedTypesManager {
    
    private final TableIdentifier<Types> tableIdentifier;
    
    protected GeneratedTypesManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("db", "publications", "types");
    }
    
    @Override
    public TableIdentifier<Types> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Types>> fields() {
        return Stream.of(
            Types.ID,
            Types.VERSION,
            Types.TYPE
        );
    }
    
    @Override
    public Stream<Field<Types>> primaryKeyFields() {
        return Stream.of(
            Types.ID
        );
    }
}